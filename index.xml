<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>宅男 &#43; 屌丝 &#43; 程序员</title>
    <link>https://limingxie.github.io/</link>
    <description>Recent content on 宅男 &#43; 屌丝 &#43; 程序员</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Jun 2022 23:55:49 +0800</lastBuildDate><atom:link href="https://limingxie.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【Vue笔记】Vue入门简介_vuex多组件(31)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_31/</link>
      <pubDate>Wed, 29 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_31/</guid>
      <description>&lt;h2 id=&#34;getters-配置项&#34;&gt;getters 配置项&lt;/h2&gt;
&lt;p&gt;index.js 中增加 getters 配置项&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_Vuex(30)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_30/</link>
      <pubDate>Tue, 28 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_30/</guid>
      <description>&lt;p&gt;这一篇整理了Vuex相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_插槽(29)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_29/</link>
      <pubDate>Mon, 27 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_29/</guid>
      <description>&lt;p&gt;这一篇整理了插槽相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_请求搜索案例(28)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_28/</link>
      <pubDate>Sun, 26 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_28/</guid>
      <description>&lt;p&gt;这一篇做了一个简单的用户搜索的请求案例。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_配置代理(27)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_27/</link>
      <pubDate>Sat, 25 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_27/</guid>
      <description>&lt;p&gt;这一篇里整理了Vue 配置代理相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_动画和过度效果(26)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_26/</link>
      <pubDate>Fri, 24 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_26/</guid>
      <description>&lt;p&gt;这一篇里整理了Vue 动画和过渡效果相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_消息订阅和发布(25)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_25/</link>
      <pubDate>Thu, 23 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_25/</guid>
      <description>&lt;p&gt;这一篇里整理了Vue 消息订阅与发布。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_全局事件总线(24)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_24/</link>
      <pubDate>Wed, 22 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_24/</guid>
      <description>&lt;p&gt;在 vue 里我们可以通过全局事件总线来实现任意组件之间通信&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_组件自定义事件(23)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_23/</link>
      <pubDate>Tue, 21 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_23/</guid>
      <description>&lt;h2 id=&#34;绑定&#34;&gt;绑定&lt;/h2&gt;
&lt;h4 id=&#34;方式一&#34;&gt;方式一&lt;/h4&gt;
&lt;p&gt;App 中有 School 组件和 Student 组件，现在我们要实现子组件向父组件传递数据，即 School 组件和 Student 组件向 App 传递数据&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_游览器本地存储(22)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_22/</link>
      <pubDate>Mon, 20 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_22/</guid>
      <description>&lt;h4 id=&#34;webstorage&#34;&gt;WebStorage&lt;/h4&gt;
&lt;p&gt;1.存储内容大小一般支持5MB左右（不同浏览器可能还不一样）&lt;br&gt;
2.浏览器端通过Window.sessionStorage和Window.localStorage属性来实现本地存储机制&lt;br&gt;
3.相关API：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_小案例(21)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_21/</link>
      <pubDate>Sun, 19 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_21/</guid>
      <description>&lt;p&gt;这一篇做了一个小案例。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_插件(20)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_20/</link>
      <pubDate>Sat, 18 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_20/</guid>
      <description>&lt;p&gt;这一篇整理了组件相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_ref_props_mixin(19)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_19/</link>
      <pubDate>Fri, 17 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_19/</guid>
      <description>&lt;h2 id=&#34;ref&#34;&gt;ref&lt;/h2&gt;
&lt;p&gt;1.被用来给元素或子组件注册引用信息（(id的替代者)&lt;br&gt;
2.应用在html标签上获取的是真实DOM元素，应用在组件标签上是组件实例对象(vc)&lt;br&gt;
3.使用方式:&lt;br&gt;
打标识: ​​​&lt;!-- raw HTML omitted --&gt;&amp;hellip;.&lt;!-- raw HTML omitted --&gt;​​​或​​&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;​​​
获取: ​​this.$refs.xxx​​&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_脚手架(18)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_18/</link>
      <pubDate>Thu, 16 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_18/</guid>
      <description>&lt;h2 id=&#34;1安装&#34;&gt;1.安装&lt;/h2&gt;
&lt;p&gt;​ ​Vue CLI 官方网站​​ &lt;a href=&#34;https://cli.vuejs.org/zh/&#34;&gt;https://cli.vuejs.org/zh/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CLI&lt;br&gt;
C：command&lt;br&gt;
L：line&lt;br&gt;
I：interface&lt;/p&gt;
&lt;p&gt;前提：Node.js安装&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_组件(17)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_17/</link>
      <pubDate>Wed, 15 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_17/</guid>
      <description>&lt;p&gt;这一篇整理了组件相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_生命周期(16)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_16/</link>
      <pubDate>Tue, 14 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_16/</guid>
      <description>&lt;p&gt;这一篇整理了生命周期相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_自定义指令(15)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_15/</link>
      <pubDate>Mon, 13 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_15/</guid>
      <description>&lt;p&gt;这一篇整理了自定义指令相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_内置指令(14)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_14/</link>
      <pubDate>Sun, 12 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_14/</guid>
      <description>&lt;p&gt;这一篇整理了内置指令相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_过滤器(13)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_13/</link>
      <pubDate>Sat, 11 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_13/</guid>
      <description>&lt;p&gt;这一篇整理了过滤器相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_收集表单数据(12)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_12/</link>
      <pubDate>Fri, 10 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_12/</guid>
      <description>&lt;p&gt;这一篇整理了收集表单数据相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_数据检测(11)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_11/</link>
      <pubDate>Thu, 09 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_11/</guid>
      <description>&lt;p&gt;这一篇整理了数据监测相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_列表过滤和排序(10)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_10/</link>
      <pubDate>Wed, 08 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_10/</guid>
      <description>&lt;p&gt;这一篇整理了列表过滤和排序相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_key的作用和原理(09)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_09/</link>
      <pubDate>Tue, 07 Jun 2022 23:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_09/</guid>
      <description>&lt;p&gt;这一篇这里了key的作用和原理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_条件渲染和遍历渲染(08)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_08/</link>
      <pubDate>Mon, 06 Jun 2022 23:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_08/</guid>
      <description>&lt;p&gt;这一篇整理了渲染相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_样式(7)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_07/</link>
      <pubDate>Sun, 05 Jun 2022 23:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_07/</guid>
      <description>&lt;p&gt;这一篇整理了样式相关的内容。&lt;br&gt;
绑定class和绑定style。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_侦听属性(06)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_06/</link>
      <pubDate>Sat, 04 Jun 2022 23:45:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_06/</guid>
      <description>&lt;p&gt;这一篇整理了侦听属性相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_计算属性(05)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_05/</link>
      <pubDate>Fri, 03 Jun 2022 23:45:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_05/</guid>
      <description>&lt;p&gt;这篇整理了Vue的计算属性&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_事件(04)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_04/</link>
      <pubDate>Thu, 02 Jun 2022 23:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_04/</guid>
      <description>&lt;h2 id=&#34;1事件处理&#34;&gt;1.事件处理&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;使用v-on:xxxx 简写 @xxx 绑定事件&lt;/li&gt;
&lt;li&gt;时间回调写在Vue实例的 methods 对象中, 不要写在data中&lt;/li&gt;
&lt;li&gt;methods中配置的函数，不要用箭头函数，这样this就不指向Vue实例了&lt;/li&gt;
&lt;li&gt;函数的参数中 event 可以用 $event 指定。&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_数据代理(03)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_03/</link>
      <pubDate>Wed, 01 Jun 2022 23:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_03/</guid>
      <description>&lt;h2 id=&#34;1objectdefineproperty&#34;&gt;1.Object.defineproperty&lt;/h2&gt;
&lt;p&gt;理解数据代理之前，先需要理解Object.defineProperty&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_数据绑定和MVVM模型(02)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_02/</link>
      <pubDate>Tue, 31 May 2022 23:45:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_02/</guid>
      <description>&lt;p&gt;看vue数据绑定的几种方式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Vue笔记】Vue入门简介_基本语法(01)</title>
      <link>https://limingxie.github.io/js/vue_2/vue_01/</link>
      <pubDate>Mon, 30 May 2022 23:35:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/vue_2/vue_01/</guid>
      <description>&lt;p&gt;看vue的官网文档感觉没有一点前端的基础的看起来很累，&lt;br&gt;
我希望结合着这个笔记一起看，哪怕是小白能能入门。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Nodejs笔记】nodejs入门简介_nvm</title>
      <link>https://limingxie.github.io/js/nodejs/nodejs_08/</link>
      <pubDate>Sun, 29 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/nodejs/nodejs_08/</guid>
      <description>&lt;p&gt;nvm可以自由的管理nodejs的版本的切换，用起来非常方便。&lt;br&gt;
这篇整理了nvm安装和常用命令。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Nodejs笔记】nodejs入门简介_express</title>
      <link>https://limingxie.github.io/js/nodejs/nodejs_07/</link>
      <pubDate>Sat, 28 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/nodejs/nodejs_07/</guid>
      <description>&lt;p&gt;这篇使用Express框架搭建一个简单的web服务器。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Nodejs笔记】nodejs入门简介_Promise(3)</title>
      <link>https://limingxie.github.io/js/nodejs/nodejs_06/</link>
      <pubDate>Fri, 27 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/nodejs/nodejs_06/</guid>
      <description>&lt;h4 id=&#34;async&#34;&gt;async&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;async函数的返回值是promise对象。&lt;/li&gt;
&lt;li&gt;promise对象的结果由async函数执行的返回值决定。&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>【Nodejs笔记】nodejs入门简介_Promise(2)</title>
      <link>https://limingxie.github.io/js/nodejs/nodejs_05/</link>
      <pubDate>Thu, 26 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/nodejs/nodejs_05/</guid>
      <description>&lt;p&gt;跟着教程写了一遍Promise的自建方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Nodejs笔记】nodejs入门简介_Promise(1)</title>
      <link>https://limingxie.github.io/js/nodejs/nodejs_04/</link>
      <pubDate>Wed, 25 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/nodejs/nodejs_04/</guid>
      <description>&lt;h2 id=&#34;1promiose-是什么&#34;&gt;1.Promiose 是什么？&lt;/h2&gt;
&lt;p&gt;Promise是JS中进行异步编程的解决方案。可以有效的避免了之前版本的回调地狱方式。&lt;br&gt;
Promise是一个构造函数。&lt;br&gt;
Promise对象用来封装一个异步操作并可以获取成功或失败的结果值。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Nodejs笔记】nodejs入门简介_文件读取和写入</title>
      <link>https://limingxie.github.io/js/nodejs/nodejs_03/</link>
      <pubDate>Tue, 24 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/nodejs/nodejs_03/</guid>
      <description>&lt;p&gt;这篇简单的整理了nodejs的buffer, 文件读取和写入, 以及流方式读取和写入。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Nodejs笔记】nodejs入门简介_模块化</title>
      <link>https://limingxie.github.io/js/nodejs/nodejs_02/</link>
      <pubDate>Mon, 23 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/nodejs/nodejs_02/</guid>
      <description>&lt;p&gt;这篇简单的整理了nodejs的模块化的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Nodejs笔记】nodejs入门简介</title>
      <link>https://limingxie.github.io/js/nodejs/nodejs_01/</link>
      <pubDate>Sun, 22 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/nodejs/nodejs_01/</guid>
      <description>&lt;p&gt;公司项目用到了vue和nodejs&amp;hellip;ㅠㅠ&lt;br&gt;
又要学新的开发语言了&amp;hellip;^^;;&lt;/p&gt;
&lt;p&gt;今天看着资料简单的整理了概念，然后搭建了一个http服务。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es11】es11的新特性整理(13)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_13/</link>
      <pubDate>Sat, 21 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_13/</guid>
      <description>&lt;p&gt;这里整理了ES11新增的特性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es8,es9,es10笔记】es8,es9的新特性_扩展(12)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_12/</link>
      <pubDate>Fri, 20 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_12/</guid>
      <description>&lt;p&gt;这里整理了ES8 对象方法扩展, ES9 扩展运算符和rest参数 和ES10 扩展方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es8笔记】es8的新特性_async_await(11)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_11/</link>
      <pubDate>Thu, 19 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_11/</guid>
      <description>&lt;p&gt;这里整理了ES8里的async和await。&lt;/p&gt;
&lt;p&gt;async和await可以让一步操作跟同步代码一样。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es6笔记】es6的入门简介_模块化(10)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_10/</link>
      <pubDate>Wed, 18 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_10/</guid>
      <description>&lt;p&gt;这里整理了模块化相关的内容。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;export&lt;/strong&gt;: 规定模块对外接口。&lt;br&gt;
&lt;strong&gt;import&lt;/strong&gt;: 输入引用其他模块提供的功能。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es6笔记】es6的入门简介_对象和数值扩展方法(9)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_09/</link>
      <pubDate>Tue, 17 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_09/</guid>
      <description>&lt;p&gt;这里整理了Object和Number扩展方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es6笔记】es6的入门简介_class(8)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_08/</link>
      <pubDate>Mon, 16 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_08/</guid>
      <description>&lt;p&gt;这里整理了Class相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es6笔记】es6的入门简介_Set_Map(7)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_07/</link>
      <pubDate>Sun, 15 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_07/</guid>
      <description>&lt;p&gt;这里整理了Set和Map相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es6笔记】es6的入门简介_Promise(6)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_06/</link>
      <pubDate>Sat, 14 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_06/</guid>
      <description>&lt;p&gt;这里整理了Promise相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es6笔记】es6的入门简介_迭代器(5)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_05/</link>
      <pubDate>Fri, 13 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_05/</guid>
      <description>&lt;p&gt;这里整理了迭代器Iterator相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es6笔记】es6的入门简介_Symbol(4)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_04/</link>
      <pubDate>Thu, 12 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_04/</guid>
      <description>&lt;p&gt;这里整理了ES6新增的类型Symbol。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es6笔记】es6的入门简介_函数和参数(3)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_03/</link>
      <pubDate>Wed, 11 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_03/</guid>
      <description>&lt;p&gt;这里整理了ES6新增的函数(箭头函数)和参数(默认值和rest)相关内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es6笔记】es6的入门简介_变量(2)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_02/</link>
      <pubDate>Tue, 10 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_02/</guid>
      <description>&lt;p&gt;这里整理了ES6新增的变量声明方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【es6笔记】es6的入门简介_基本概念(1)</title>
      <link>https://limingxie.github.io/js/emas/emas_script_01/</link>
      <pubDate>Mon, 09 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/emas/emas_script_01/</guid>
      <description>&lt;p&gt;我们接触ES6的时候，会接触到一些名词，为了避免混淆先明确一下这些名词的概念。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript笔记】JavaScript基础_Dom(10)</title>
      <link>https://limingxie.github.io/js/javascript/javascript_10/</link>
      <pubDate>Sun, 08 May 2022 22:25:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/javascript/javascript_10/</guid>
      <description>&lt;p&gt;这里整理了DOM相关内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript笔记】JavaScript基础_call_apply_arguments(9)</title>
      <link>https://limingxie.github.io/js/javascript/javascript_09/</link>
      <pubDate>Sat, 07 May 2022 08:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/javascript/javascript_09/</guid>
      <description>&lt;p&gt;这里整理了函数的call, apply, arguments。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript笔记】JavaScript基础_数组(8)</title>
      <link>https://limingxie.github.io/js/javascript/javascript_08/</link>
      <pubDate>Fri, 06 May 2022 01:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/javascript/javascript_08/</guid>
      <description>&lt;p&gt;这里整理了数组的适用方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript笔记】JavaScript基础_this和原型(7)</title>
      <link>https://limingxie.github.io/js/javascript/javascript_07/</link>
      <pubDate>Thu, 05 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/javascript/javascript_07/</guid>
      <description>&lt;p&gt;这里整理了函数中this和原型使用方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript笔记】JavaScript基础_作用域(6)</title>
      <link>https://limingxie.github.io/js/javascript/javascript_06/</link>
      <pubDate>Wed, 04 May 2022 01:55:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/javascript/javascript_06/</guid>
      <description>&lt;p&gt;这里整理了变量的作用域，全局和函数内。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript笔记】JavaScript基础_函数(5)</title>
      <link>https://limingxie.github.io/js/javascript/javascript_05/</link>
      <pubDate>Tue, 03 May 2022 00:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/javascript/javascript_05/</guid>
      <description>&lt;p&gt;函数也是对象，封装了一些功能(代码)，可以调用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript笔记】JavaScript基础_Object对象(4)</title>
      <link>https://limingxie.github.io/js/javascript/javascript_04/</link>
      <pubDate>Mon, 02 May 2022 10:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/javascript/javascript_04/</guid>
      <description>&lt;h2 id=&#34;1对象分类&#34;&gt;1.对象分类&lt;/h2&gt;
&lt;p&gt;对象可以分3种。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;内建对象:&lt;/strong&gt; 有ES标准中定义的对象。比如：String, Number, Object&amp;hellip;.&lt;br&gt;
&lt;strong&gt;宿主对象:&lt;/strong&gt; 有JS运行环境提供的对象。主要是游览器提供的对象。比如：BOM, DMO, window, global, self, this &amp;hellip;&lt;br&gt;
&lt;strong&gt;自定义对象:&lt;/strong&gt; 有开发人员自己创造的对象。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript笔记】JavaScript基础_流程控制(3)</title>
      <link>https://limingxie.github.io/js/javascript/javascript_03/</link>
      <pubDate>Sun, 01 May 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/javascript/javascript_03/</guid>
      <description>&lt;p&gt;这一遍整理了 if, switch, while, for 的语法。&lt;br&gt;
因为和其他语言没什么区别，所以这里就简单的整理了一下使用方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript笔记】JavaScript基础_运算符(2)</title>
      <link>https://limingxie.github.io/js/javascript/javascript_02/</link>
      <pubDate>Sat, 30 Apr 2022 23:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/javascript/javascript_02/</guid>
      <description>&lt;p&gt;这里整理了常用的运算符，在代码的注释里一起描述了运算符的含义。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript笔记】JavaScript基础_结构和类型(1)</title>
      <link>https://limingxie.github.io/js/javascript/javascript_01/</link>
      <pubDate>Fri, 29 Apr 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/js/javascript/javascript_01/</guid>
      <description>&lt;p&gt;本想学Nodejs的，结果发现自己的JavaScript的基础太差,&lt;br&gt;
(几年前看了一下基本语法后，就没有碰过了。)
而且很多资料大部分都是对JavaScript有所了解为前提。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第五层:应用层(Application)HTTPS协议简介(11)</title>
      <link>https://limingxie.github.io/network/5_application_11/</link>
      <pubDate>Thu, 28 Apr 2022 18:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5_application_11/</guid>
      <description>&lt;p&gt;这一篇j简单整理了VPN、tcpdump、网络爬虫、HTTP缓存、IPv6、即时通信、流媒体。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第五层:应用层(Application)HTTPS协议简介(10)</title>
      <link>https://limingxie.github.io/network/5_application_10/</link>
      <pubDate>Wed, 27 Apr 2022 18:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5_application_10/</guid>
      <description>&lt;p&gt;这一篇整理了WebSocket、FTP、RESTful、SMTP、IMAP、POP等协议。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第五层:应用层(Application)HTTPS协议简介(9)</title>
      <link>https://limingxie.github.io/network/5_application_https_09/</link>
      <pubDate>Tue, 26 Apr 2022 18:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5_application_https_09/</guid>
      <description>&lt;p&gt;这一篇整理了HTTP2和HTTP3。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第五层:应用层(Application)HTTPS协议简介(8)</title>
      <link>https://limingxie.github.io/network/5_application_https_08/</link>
      <pubDate>Mon, 25 Apr 2022 18:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5_application_https_08/</guid>
      <description>&lt;p&gt;这一篇整理了HTTPS的TLS协议。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第五层:应用层(Application)HTTPS协议简介(7)</title>
      <link>https://limingxie.github.io/network/5_application_https_07/</link>
      <pubDate>Sun, 24 Apr 2022 18:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5_application_https_07/</guid>
      <description>&lt;p&gt;这一篇整理了对称加密，非对称加密，数字签名，证书。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第五层:应用层(Application)HTTP协议简介(6)</title>
      <link>https://limingxie.github.io/network/5_application_http_06/</link>
      <pubDate>Sat, 23 Apr 2022 18:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5_application_http_06/</guid>
      <description>&lt;p&gt;这一篇整理了代理，CND，网络安全相关的内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第五层:应用层(Application)HTTP协议简介(5)</title>
      <link>https://limingxie.github.io/network/5_application_http_05/</link>
      <pubDate>Fri, 22 Apr 2022 18:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5_application_http_05/</guid>
      <description>&lt;p&gt;这一篇整理了跨域，cookie和session的基本概念和用法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第五层:应用层(Application)HTTP协议简介(4)</title>
      <link>https://limingxie.github.io/network/5_application_http_04/</link>
      <pubDate>Thu, 21 Apr 2022 18:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5_application_http_04/</guid>
      <description>&lt;p&gt;这一篇整理了应用层的 HTTP协议的状态码和form表单。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第五层:应用层(Application)HTTP协议简介(3)</title>
      <link>https://limingxie.github.io/network/5_application_http_03/</link>
      <pubDate>Wed, 20 Apr 2022 18:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5_application_http_03/</guid>
      <description>&lt;p&gt;这一篇整理了应用层的 HTTP协议的ABNF格式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第五层:应用层(Application)HTTP协议简介(2)</title>
      <link>https://limingxie.github.io/network/5_application_http_02/</link>
      <pubDate>Tue, 19 Apr 2022 18:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5_application_http_02/</guid>
      <description>&lt;p&gt;这一篇整理了应用层的 HTTP协议的概念，以及大致的结构。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第五层:应用层(Application)简介(1)</title>
      <link>https://limingxie.github.io/network/5_application_01/</link>
      <pubDate>Mon, 18 Apr 2022 18:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5_application_01/</guid>
      <description>&lt;p&gt;这一篇整理了应用层的 域名，DNS, DHCP。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第四层:传输层(Transport)TCP协议简介(3)</title>
      <link>https://limingxie.github.io/network/4_-transport_tcp_03/</link>
      <pubDate>Sun, 17 Apr 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/4_-transport_tcp_03/</guid>
      <description>&lt;p&gt;TCP有以下几个知识点。这一篇整理建立连接部分，包括三次握手和4次挥手。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第四层:传输层(Transport)TCP协议简介(2)</title>
      <link>https://limingxie.github.io/network/4_-transport_tcp_02/</link>
      <pubDate>Sat, 16 Apr 2022 06:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/4_-transport_tcp_02/</guid>
      <description>&lt;p&gt;TCP有以下几个知识点。这一篇整理【2.流量控制】和【3.拥塞控制】&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第四层:传输层(Transport)TCP协议简介(1)</title>
      <link>https://limingxie.github.io/network/4_-transport_tcp_01/</link>
      <pubDate>Fri, 15 Apr 2022 21:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/4_-transport_tcp_01/</guid>
      <description>&lt;p&gt;TCP有以下几个知识点。这一篇整理【TCP结构】和【1.可靠传输】&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第四层:传输层(Transport)以及UPD协议简介</title>
      <link>https://limingxie.github.io/network/4_-transport__udp/</link>
      <pubDate>Thu, 14 Apr 2022 21:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/4_-transport__udp/</guid>
      <description>&lt;h2 id=&#34;1传输层transport&#34;&gt;1.传输层（Transport）&lt;/h2&gt;
&lt;p&gt;TCP和UDP的区别：
&lt;a href=&#34;https://limingxie.github.io/images/network/transport/tcp_udp.png&#34;&gt;图片备用地址&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;https://mingxie-blog.oss-cn-beijing.aliyuncs.com/image/network/transport/tcp_udp.png?x-oss-process=image/resize,w_700,m_lfit&#34; alt=&#34;tcp_udp&#34;&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第三层:网络层(Network)简介</title>
      <link>https://limingxie.github.io/network/3_-network-copy/</link>
      <pubDate>Wed, 13 Apr 2022 19:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/3_-network-copy/</guid>
      <description>&lt;p&gt;网络层数据包（IP数据包：Packet）由首部、数据2部分组成。&lt;br&gt;
&lt;strong&gt;数据:&lt;/strong&gt; 由传输层传递下来的数据段(Segment)。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第二层:数据链路层(Data Link)简介</title>
      <link>https://limingxie.github.io/network/2_data_link/</link>
      <pubDate>Tue, 12 Apr 2022 19:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/2_data_link/</guid>
      <description>&lt;p&gt;数据链路层(Data Link)是网络协议中的第二层。&lt;br&gt;
&lt;strong&gt;链路:&lt;/strong&gt; 从1个节点到相邻节点的一段物理线路(有线或无线)，中间没有其他交换节点。&lt;br&gt;
&lt;strong&gt;数据链路:&lt;/strong&gt; 在一条链路上传输数据时，需要有对应的通信协议来控制数据的传输。&lt;/p&gt;
&lt;p&gt;不同类型的数据链路，所用的通信协议可能是不同的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第一层:物理层(Physical)简介</title>
      <link>https://limingxie.github.io/network/1_physical-copy/</link>
      <pubDate>Mon, 11 Apr 2022 19:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/1_physical-copy/</guid>
      <description>&lt;p&gt;物理层定义了接口标准、线缆标准、传输速率、传输方式等（比如路由器定义的接口是做什么的、水晶头怎么排布、光缆线的作用等）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】路由工作原理简介</title>
      <link>https://limingxie.github.io/network/route/</link>
      <pubDate>Sun, 10 Apr 2022 17:20:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/route/</guid>
      <description>&lt;p&gt;我们知道不同网段的设备转发数据，需要路由器的支持。&lt;br&gt;
默认情况下，路由器是只知道跟他直连的网段，非直连的网段是需要通过静态路由或动态路由告诉它。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】网络基础整理</title>
      <link>https://limingxie.github.io/network/internet_definition/</link>
      <pubDate>Sat, 09 Apr 2022 16:27:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/internet_definition/</guid>
      <description>&lt;p&gt;有一些些网络基础的概念，知道了能会更好的理解网络。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】mac地址和ip地址简介</title>
      <link>https://limingxie.github.io/network/mac_ip/</link>
      <pubDate>Fri, 08 Apr 2022 22:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/mac_ip/</guid>
      <description>&lt;h2 id=&#34;1mac地址&#34;&gt;1.MAC地址&lt;/h2&gt;
&lt;p&gt;每个网卡都有一个唯一(6个字节48bit)的MAC地址(Media Access Control Address)。&lt;br&gt;
这个地址是由硬件设备生成的，是网络设备的唯一标识。&lt;br&gt;
固化在网卡的ROM中，有IEEE802标准规定的MAC地址格式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】计算机之间的通信和链接方式</title>
      <link>https://limingxie.github.io/network/computer_communication/</link>
      <pubDate>Thu, 07 Apr 2022 22:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/computer_communication/</guid>
      <description>&lt;h2 id=&#34;1计算机之间的通信&#34;&gt;1.计算机之间的通信&lt;/h2&gt;
&lt;p&gt;计算机之间的通信是通过网络进行的，网络是计算机之间的一种通信方式。&lt;br&gt;
那我们要如何进行网络通信呢？&lt;br&gt;
首先我们需要知道对方的IP地址，通过IP地址获取MAC地址(ARP广播)。&lt;br&gt;
然后把数据通过网卡传送到对方的网络中。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【网络协议笔记】浅谈OSI网络七层协议</title>
      <link>https://limingxie.github.io/network/osi/</link>
      <pubDate>Wed, 06 Apr 2022 22:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/osi/</guid>
      <description>&lt;p&gt;开放式系统互联模型（英语：Open System Interconnection Model，缩写：OSI；简称为OSI模型）是一种概念模型。&lt;br&gt;
从分布式应用程序数据的最高层表示到跨通信介质传输数据的物理实现。&lt;br&gt;
每个中间层为其上一层提供功能，其自身功能则由其下一层提供。功能的类别通过标准的通信协议在软件中实现。&lt;br&gt;
OSI模型分为七个层次。它们由低到高分别是物理层(PH)、数据链路层(DL)、网络层(N)、传输层(T)、会话层(S)、表示层(P)、应用层(A)。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>浅谈数字证书(Digital Certificate)的发放和验证原理</title>
      <link>https://limingxie.github.io/network/digital_certificate/</link>
      <pubDate>Tue, 05 Apr 2022 22:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/digital_certificate/</guid>
      <description>&lt;h2 id=&#34;1数字证书是什么&#34;&gt;1.数字证书是什么？&lt;/h2&gt;
&lt;p&gt;数字证书(digital certificate)是互联网通讯中标志通讯各方身份信息的一系列数据，提供了验证身份的方式。&lt;br&gt;
它是由一个由权威机构（Certificate Authority）中心发行的，人们可以在网上用它来识别对方的身份。&lt;br&gt;
最简单的数字证书包含一个公开密钥、名称以及证书授权中心的数字签名。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【mysql】索引简介</title>
      <link>https://limingxie.github.io/database/mysql/mysql_index/</link>
      <pubDate>Tue, 05 Apr 2022 08:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/database/mysql/mysql_index/</guid>
      <description>&lt;p&gt;最近了查看了mysql索引，很多资料&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>5G网架构简介</title>
      <link>https://limingxie.github.io/network/5gc/</link>
      <pubDate>Mon, 04 Apr 2022 16:38:02 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/5gc/</guid>
      <description>&lt;p&gt;最近有机会查看了有关5G网的内容。对于移动通讯完全不懂的小白来说一切都很陌生和茫然。&lt;br&gt;
几天的摸索，整理了“皮毛”内容，希望像我这样的小白有帮助&amp;hellip;^^&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【go笔记】goroutine调度器的GMP模型简介</title>
      <link>https://limingxie.github.io/go/go_routine/</link>
      <pubDate>Wed, 23 Mar 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/go_routine/</guid>
      <description>&lt;p&gt;说起go语言，离不开goroutine。&lt;br&gt;
之前使用go语言开发的时候，也没多少机会用到goroutine。&lt;br&gt;
趁这些天了解一下GMP模型G(goroutine) M(thread) P(Processor)。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【go笔记】map结构的简介</title>
      <link>https://limingxie.github.io/go/go_map/</link>
      <pubDate>Sat, 19 Mar 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/go_map/</guid>
      <description>&lt;p&gt;go的hashtable是用map实现。&lt;br&gt;
今天简单的整理了map的结构。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【ES笔记】Elasticsearch结构和常用API简介</title>
      <link>https://limingxie.github.io/database/elasticsearch/</link>
      <pubDate>Thu, 17 Mar 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/database/elasticsearch/</guid>
      <description>&lt;p&gt;简单的做一下Elasticsearch的结构和常用语法的记录。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【go笔记】切片(slice)结构的简介</title>
      <link>https://limingxie.github.io/go/go_slice_code/</link>
      <pubDate>Sat, 12 Mar 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/go_slice_code/</guid>
      <description>&lt;p&gt;我们java里有个ArrayList， 那go有切片(slice)。&lt;br&gt;
看起来有点像，但是了解切片(slice)结构后，会发现这其实是个两个不同的结构。&lt;br&gt;
下面简单的整理了切片(slice)的结构。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【go笔记】指针, uintptr, unsafe.Pointer</title>
      <link>https://limingxie.github.io/go/go_point/</link>
      <pubDate>Thu, 10 Mar 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/go_point/</guid>
      <description>&lt;p&gt;今天简单整理一下以下三种指针: 普通指针(*T), uintptr, unsafe.Pointer&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>72小时断食后记</title>
      <link>https://limingxie.github.io/limingxie/-intermittent_fasting_72h/</link>
      <pubDate>Sun, 06 Mar 2022 22:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/-intermittent_fasting_72h/</guid>
      <description>&lt;p&gt;很长时间在网上看过3天【&lt;strong&gt;72小时的断食&lt;/strong&gt;】多么多么的好，&lt;br&gt;
说什么改善人体免疫系统，消化系统，排除毒素等等&amp;hellip;&lt;br&gt;
我以前减肥的时候也尝试过12,16,24小时的断食，也亲身体验过这些断食的好处。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【算法笔记】排序二叉树(Binary Search Tree)的简单代码实现</title>
      <link>https://limingxie.github.io/algorithm/tree_code_bst/</link>
      <pubDate>Thu, 17 Feb 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/algorithm/tree_code_bst/</guid>
      <description>&lt;p&gt;简单的写了一下排序二叉树(Binary Search Treee)的查询，删除。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【算法笔记】散列表(哈希表 Hash table)的简单实践</title>
      <link>https://limingxie.github.io/algorithm/hash_table/</link>
      <pubDate>Wed, 16 Feb 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/algorithm/hash_table/</guid>
      <description>&lt;p&gt;今天用go语言简单的写了一下散列表(哈希表 Hash table)的方法。&lt;br&gt;
为了以后方便查看，当做笔记整理了一下~~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【算法笔记】PriorityQueue的简单实践</title>
      <link>https://limingxie.github.io/algorithm/priority_queue_code/</link>
      <pubDate>Tue, 15 Feb 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/algorithm/priority_queue_code/</guid>
      <description>&lt;p&gt;今天用go语言简单的写了一下PriorityQueue的方法。&lt;br&gt;
为了以后方便查看，当做笔记整理了一下~~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【算法笔记】queue的简单实践</title>
      <link>https://limingxie.github.io/algorithm/queue_code/</link>
      <pubDate>Mon, 14 Feb 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/algorithm/queue_code/</guid>
      <description>&lt;p&gt;今天用go语言简单的写了一下queue的方法。&lt;br&gt;
为了以后方便查看，当做笔记整理了一下~~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【算法笔记】stack的简单实践</title>
      <link>https://limingxie.github.io/algorithm/stack/</link>
      <pubDate>Sun, 13 Feb 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/algorithm/stack/</guid>
      <description>&lt;p&gt;今天用go语言简单的写了一下stack的方法。&lt;br&gt;
为了以后方便查看，当做笔记整理了一下~~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【算法笔记】时间复杂度(Time complexity) 和 空间复杂度(Space Complexity)</title>
      <link>https://limingxie.github.io/algorithm/time_complexity/</link>
      <pubDate>Wed, 09 Feb 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/algorithm/time_complexity/</guid>
      <description>&lt;p&gt;我们讨论一些算法的时候，会经常听说时间复杂度和空间复杂度。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【算法笔记】链表(Linked List)的简单实践</title>
      <link>https://limingxie.github.io/algorithm/linked_list_code/</link>
      <pubDate>Sat, 29 Jan 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/algorithm/linked_list_code/</guid>
      <description>&lt;p&gt;今天用go语言简单的写了一下单向链表的方法。&lt;br&gt;
为了以后方便查看，当做笔记整理了一下~~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【mysql】常见的4种存储引擎</title>
      <link>https://limingxie.github.io/database/mysql/mysql_engine/</link>
      <pubDate>Thu, 27 Jan 2022 08:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/database/mysql/mysql_engine/</guid>
      <description>&lt;p&gt;我们一般用的mysql创建表的时候默认是使用了InnoBD存储引擎。&lt;br&gt;
我本人不是计算机专业，所以刚接触mysql时没注意到它居然有好几种存储引擎。&lt;br&gt;
在不同的场景下，mysql可以选择不同的存储引擎。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>测试代码的基本结构以及(Test Double)的种类</title>
      <link>https://limingxie.github.io/limingxie/test_code/</link>
      <pubDate>Wed, 26 Jan 2022 08:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/test_code/</guid>
      <description>&lt;p&gt;最近有机会写.net的项目了, 习惯性的研究了如何去写测试代码。&lt;br&gt;
这次查看的资料比以前研究golang测试稍微详细了点。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【算法笔记】数组(Array)的模拟实践</title>
      <link>https://limingxie.github.io/algorithm/list_code/</link>
      <pubDate>Tue, 25 Jan 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/algorithm/list_code/</guid>
      <description>&lt;p&gt;今天用go语言简单的写了一下数组的方法。&lt;br&gt;
为了以后方便查看，当做笔记整理了一下~~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>普通开发工作多年后的感触</title>
      <link>https://limingxie.github.io/limingxie/work_note_002/</link>
      <pubDate>Thu, 06 Jan 2022 08:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/work_note_002/</guid>
      <description>&lt;p&gt;最近刚换了工作，到了新的岗位，准备新的开始。&lt;br&gt;
我到现在刚好工作了14年了。是在淘汰的边缘挣扎的高龄开发(38岁)&amp;hellip;^^;;&lt;br&gt;
在这十多年的工作期间，发现除了“编程”还有一些额外的因素影响我们的职场。&lt;br&gt;
一般的开发人员常年和电脑打交道，会忽略这些因素。&lt;br&gt;
我希望通过这次分享能给初入职场的开发人员一些帮助。。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【go笔记】 数组, 切片(slice), 映射(map)简介</title>
      <link>https://limingxie.github.io/go/go_slice/</link>
      <pubDate>Tue, 27 Jul 2021 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/go_slice/</guid>
      <description>&lt;p&gt;我们在日常变成中经常用到数组, 切片(slice), 映射(map)。&lt;br&gt;
这篇文章中简单的介绍一下这3中结构。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【go笔记】new和make的区别</title>
      <link>https://limingxie.github.io/go/go_new_make/</link>
      <pubDate>Tue, 27 Jul 2021 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/go_new_make/</guid>
      <description>&lt;p&gt;new和make都是分配资源的命令，这两个命令很容易混淆。&lt;br&gt;
但是我们只要弄清楚其规则，区分起来不难。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Java笔记】简单了解List, ArrayList, LinkedList</title>
      <link>https://limingxie.github.io/java/java_list/</link>
      <pubDate>Fri, 16 Jul 2021 08:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/java/java_list/</guid>
      <description>&lt;p&gt;我们经常会用的几个List结构，那具体在什么样的场景下使用哪个List会更合适呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【java笔记】HashMap, HashTable, ConcurrentHashMap, TreeMap, LinkedHashMap</title>
      <link>https://limingxie.github.io/java/java_map/</link>
      <pubDate>Wed, 14 Jul 2021 12:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/java/java_map/</guid>
      <description>&lt;p&gt;我们经常会遇到使用Map的情况。而且Map有很多衍生类。&lt;br&gt;
这些类之间有什么区别呢？在何种情况下用何种类呢？&lt;br&gt;
下面我大致整理了什么视情况使用哪种map比较合适，没有单独的去解释每个map的结构和原理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>公司被收购后的经历</title>
      <link>https://limingxie.github.io/limingxie/work_note_001/</link>
      <pubDate>Fri, 09 Jul 2021 09:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/work_note_001/</guid>
      <description>&lt;p&gt;公司被收购也差不多经历了一年的时间了。&lt;br&gt;
想写写自从公司被收购以后，我这一年内心的变化。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【笔记】RPC和REST的区别</title>
      <link>https://limingxie.github.io/etc/rpc_restful/</link>
      <pubDate>Wed, 16 Jun 2021 20:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/etc/rpc_restful/</guid>
      <description>&lt;p&gt;我们开发的时候会经常听到rpc方式调用方法。或是说调用RESTful api。
那这RPC和REST到底是什么？有什么区别？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TCP/IP协议，HTTP协议，HTTPS协议，SOAP协议简介</title>
      <link>https://limingxie.github.io/etc/communication_protocol/</link>
      <pubDate>Wed, 16 Jun 2021 18:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/etc/communication_protocol/</guid>
      <description>&lt;p&gt;我们会听到很多网络通讯协议，如果了解的不到位的话会让你晕头转向的。&lt;br&gt;
今天就按笔记的形式整理了一下我们常见的几种协议。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>URI,URL,URN的区别</title>
      <link>https://limingxie.github.io/etc/uri_url_urn/</link>
      <pubDate>Wed, 16 Jun 2021 08:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/etc/uri_url_urn/</guid>
      <description>&lt;p&gt;我们经常接触到 URI，URL，URN 这些名词。&lt;br&gt;
本以为都是同一个概念，但我发现它们还是有些区别的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>简单整理商品模块的概念和关系</title>
      <link>https://limingxie.github.io/limingxie/product/</link>
      <pubDate>Wed, 07 Apr 2021 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/product/</guid>
      <description>&lt;p&gt;这几天准备构建自营的商品中心。&lt;br&gt;
本以为很简单的已知业务，却没想到会有些抽象的概念和模糊的关系，折磨了我很久。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JVM】javac的编译过程</title>
      <link>https://limingxie.github.io/java/java_javac_compiler/</link>
      <pubDate>Mon, 04 Jan 2021 08:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/java/java_javac_compiler/</guid>
      <description>&lt;p&gt;Java 编译是先把xx.java文件编译成xx.class文件。xx.class是个中间状态的字节码(Byte Code)。&lt;br&gt;
类加载器(Class Loader)读取到JVM里后, 再一次解析成机器码(Binary Code)执行。&lt;br&gt;
也就是说Java是需要做两次编译，其中的第一次编译(.java =&amp;gt; .class)是如何执行的呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>程序员减肥记</title>
      <link>https://limingxie.github.io/limingxie/diet/</link>
      <pubDate>Wed, 23 Dec 2020 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/diet/</guid>
      <description>&lt;p&gt;一说起程序员，一般联想到的是熬夜，加班，秃头，小肚子等等&amp;hellip;&lt;br&gt;
我去年感到身体上的异样，不如以前了。&lt;br&gt;
年龄也不小了，加上圆圆的肚子，血脂和血压都不正常，而且还带有脂肪肝。&lt;br&gt;
所以我下定决心减肥了，我本人做一件事会很投入的类型。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JVM】浅谈java编译和执行过程</title>
      <link>https://limingxie.github.io/java/java_compile_runtime/</link>
      <pubDate>Sun, 20 Dec 2020 08:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/java/java_compile_runtime/</guid>
      <description>&lt;p&gt;上一篇&lt;a href=&#34;https://limingxie.github.io/java/compile_java/&#34;&gt;【JVM】java大致的编译过程&lt;/a&gt;简单的解释了java编译执行过程。&lt;br&gt;
这里稍微再详细点说明其编译和执行过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JVM】java大致的编译过程</title>
      <link>https://limingxie.github.io/java/compile_java/</link>
      <pubDate>Fri, 20 Nov 2020 08:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/java/compile_java/</guid>
      <description>&lt;p&gt;我们先简单的了解一下java编译到执行的过程。&lt;br&gt;
后续我会详细的介绍具体详细的方式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>C语言的编译和执行过程</title>
      <link>https://limingxie.github.io/etc/compile_c/</link>
      <pubDate>Fri, 30 Oct 2020 08:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/etc/compile_c/</guid>
      <description>&lt;p&gt;没有系统的学过C语言，为了了解java编译流程。&lt;br&gt;
先简单的略过了一下C语言的编译过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JVM】JDK, JRE, JVM简介</title>
      <link>https://limingxie.github.io/java/java_plateform_se_8/</link>
      <pubDate>Thu, 29 Oct 2020 08:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/java/java_plateform_se_8/</guid>
      <description>&lt;p&gt;刚接触到java后，我经常听到的JDK，JRE，JVM这些缩写词。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JVM】java中的栈内存, 堆内存</title>
      <link>https://limingxie.github.io/java/java_stack_heap/</link>
      <pubDate>Tue, 13 Oct 2020 12:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/java/java_stack_heap/</guid>
      <description>&lt;p&gt;上一篇文章简单整理了&lt;a href=&#34;https://limingxie.github.io/basic/stack/&#34;&gt;栈(stack), 堆(heap), 队列(queue)的结构&lt;/a&gt;&lt;br&gt;
这一篇继续整理java中的 占内存，堆内存。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>栈(stack), 堆(heap), 队列(queue) 是什么？</title>
      <link>https://limingxie.github.io/etc/stack/</link>
      <pubDate>Mon, 12 Oct 2020 23:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/etc/stack/</guid>
      <description>&lt;p&gt;我们平时经常遇到栈(stack), 队列(queue), 堆(heap)这些词语。&lt;br&gt;
像我这样不是计算机专业毕业的程序原来说，为了更好的理解这些内容，&lt;br&gt;
我自己简单的整理了一下栈(stack), 堆(heap)和队列(queue)的概念。&lt;br&gt;
希望有些帮助。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【java笔记】反射的简单应用</title>
      <link>https://limingxie.github.io/java/reflect/</link>
      <pubDate>Thu, 30 Jul 2020 23:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/java/reflect/</guid>
      <description>&lt;p&gt;今天在代码中看到了invoke方法，了解到原来是使用了反射的机制。&lt;br&gt;
以前没怎么用过这种方式，所以简单的了解一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【java笔记】this和super简介</title>
      <link>https://limingxie.github.io/java/this_super/</link>
      <pubDate>Sun, 26 Jul 2020 12:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/java/this_super/</guid>
      <description>&lt;p&gt;本来是确认构造函数的运行方式的。&lt;br&gt;
结果看到继承以及super关键字了&amp;hellip;^^;;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【java笔记】类, 抽象类, 接口的简单实验</title>
      <link>https://limingxie.github.io/java/abstract_test/</link>
      <pubDate>Sun, 26 Jul 2020 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/java/abstract_test/</guid>
      <description>&lt;p&gt;要接触，抽象，继承，多态，封装的java了。&lt;br&gt;
为了加深理解自己做了一个简单的实验。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【java笔记】序列化和反序列化</title>
      <link>https://limingxie.github.io/java/serialization/</link>
      <pubDate>Thu, 02 Jul 2020 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/java/serialization/</guid>
      <description>&lt;p&gt;当做笔记简单了记录了一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【k8s】kubernetes基本的概念</title>
      <link>https://limingxie.github.io/tool/k8s/</link>
      <pubDate>Wed, 01 Jul 2020 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/tool/k8s/</guid>
      <description>&lt;p&gt;最近抽时间了解Kubernetes。那些网上和官方的材料都讲得很深，很细。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>递归(recursive)</title>
      <link>https://limingxie.github.io/algorithm/recursive/</link>
      <pubDate>Sat, 03 Aug 2019 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/algorithm/recursive/</guid>
      <description>&lt;p&gt;最近在研究算法&amp;hellip;^^ 算法中最基本的是排序。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>算法(排序)</title>
      <link>https://limingxie.github.io/algorithm/sort/</link>
      <pubDate>Tue, 09 Jul 2019 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/algorithm/sort/</guid>
      <description>&lt;p&gt;感觉现在越来越重视算法了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>设计原则那些事儿</title>
      <link>https://limingxie.github.io/limingxie/solid_1/</link>
      <pubDate>Thu, 06 Jun 2019 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/solid_1/</guid>
      <description>&lt;p&gt;代码架构的设计原则中最普遍的是solid原则。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go项目:error错误处理</title>
      <link>https://limingxie.github.io/go/err_return/</link>
      <pubDate>Thu, 14 Feb 2019 08:38:02 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/err_return/</guid>
      <description>&lt;p&gt;上一篇文章我介绍了拆分服务后如何去写测试代码。
&lt;a href=&#34;https://limingxie.github.io/go/my_go_test4/&#34;&gt;Go项目:傻瓜式联合测试&lt;/a&gt;&lt;br&gt;
今天想共享一下，我是如何处理error。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go项目:傻瓜式联合测试</title>
      <link>https://limingxie.github.io/go/my_go_test4/</link>
      <pubDate>Tue, 12 Feb 2019 08:38:02 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/my_go_test4/</guid>
      <description>&lt;p&gt;现在微服务很流行，加上我的项目从10个表增加到30+表的业务量。&lt;br&gt;
感觉有些内容不应该在同一个服务里。
于是我做了一个决定: &lt;strong&gt;&lt;code&gt;拆分服务&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go websocket的简单应用</title>
      <link>https://limingxie.github.io/go/go_socket/</link>
      <pubDate>Thu, 06 Dec 2018 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/go_socket/</guid>
      <description>&lt;p&gt;因为我们是做企业ERP系统，没什么机会接触socket。&lt;br&gt;
这次准备做消息推送才了解到还有socket这种技术&amp;hellip;ㅠㅠ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一个小小变化的效果</title>
      <link>https://limingxie.github.io/limingxie/do_change/</link>
      <pubDate>Sun, 11 Nov 2018 05:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/do_change/</guid>
      <description>&lt;p&gt;今天是双11，本想来公司凑凑热闹&amp;hellip;^^&lt;br&gt;
结果主要问题都是在我的服务里，还把登录给整瘫了半个多小时&amp;hellip;ㅠㅠ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux 常用命令整理(一)</title>
      <link>https://limingxie.github.io/limingxie/linux_command/</link>
      <pubDate>Sun, 02 Sep 2018 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/linux_command/</guid>
      <description>&lt;p&gt;这么晚了才认识了linux系统。感觉越来越喜欢linux系统了。&lt;br&gt;
废话少说，这几天自己做的笔记，炫耀一下&amp;hellip;.^^&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>solid原则简单笔记</title>
      <link>https://limingxie.github.io/limingxie/solid/</link>
      <pubDate>Sat, 01 Sep 2018 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/solid/</guid>
      <description>&lt;p&gt;这些天因为工作上的需求，一套代码部署到不同的环境里。&lt;br&gt;
虽然说是一样的业务，但是在不同的环境里难免会有一些少许不同的业务。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git命令 cherry-pick 的使用简介</title>
      <link>https://limingxie.github.io/tool/git_cherry_pick/</link>
      <pubDate>Mon, 30 Jul 2018 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/tool/git_cherry_pick/</guid>
      <description>&lt;p&gt;上一篇文章介绍了merge和rebase的用法以及原理。&lt;br&gt;
&lt;a href=&#34;https://limingxie.github.io/git/git_merge_rebase/&#34;&gt;git命令merge和rebase的简单应用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里简单的介绍一下 cherry-pick 的用法。&lt;br&gt;
什么时候会用到 cherry-pick 命令？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git命令merge和rebase的简单应用</title>
      <link>https://limingxie.github.io/tool/git_merge_rebase/</link>
      <pubDate>Sun, 29 Jul 2018 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/tool/git_merge_rebase/</guid>
      <description>&lt;p&gt;因为工作的需求，项目分了几个大分支管理了。&lt;br&gt;
不同的环境需要的功能也不一样，在不同的分支里修改。&lt;br&gt;
虽然我不太喜欢这种做法。但是借此机会对merge和rebase, cherry-pick命令研究了一些。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Redis简单应用</title>
      <link>https://limingxie.github.io/database/redis/redis/</link>
      <pubDate>Sun, 01 Jul 2018 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/database/redis/redis/</guid>
      <description>&lt;p&gt;这些天因为项目性能上的问题，采用了Redis缓存。&lt;br&gt;
做了一些简单的笔记。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>区块链blockchain基础入门(二)</title>
      <link>https://limingxie.github.io/limingxie/blockchain_2/</link>
      <pubDate>Fri, 22 Jun 2018 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/blockchain_2/</guid>
      <description>&lt;p&gt;上一篇文章简单的介绍了一下区块链blockchain到底是什么。&lt;br&gt;
&lt;a href=&#34;https://limingxie.github.io/limingxie/blockchain_introduction/&#34;&gt;区块链blockchain零基础入门(一)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来继续简单的介绍一下区块链blockchain的结构。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>区块链blockchain零基础入门(一)</title>
      <link>https://limingxie.github.io/limingxie/blockchain_introduction/</link>
      <pubDate>Fri, 22 Jun 2018 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/blockchain_introduction/</guid>
      <description>&lt;p&gt;区块链blockchain这几年比较火爆的词。&lt;br&gt;
不是计算机行业的人如何去理解这么技术呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>公钥，私钥，数字签名，数字证书的相互关系</title>
      <link>https://limingxie.github.io/limingxie/encrpytion_key/</link>
      <pubDate>Thu, 07 Jun 2018 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/encrpytion_key/</guid>
      <description>&lt;p&gt;我们经常听到数字证书，数字签名这些词。&lt;br&gt;
这些证书，签名到底是什么？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go项目的测试代码3（测试替身Test Double）</title>
      <link>https://limingxie.github.io/go/my_go_test3/</link>
      <pubDate>Sun, 27 May 2018 20:38:02 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/my_go_test3/</guid>
      <description>&lt;p&gt;上一篇文章介绍了项目中测试代码的写法。
&lt;a href=&#34;https://limingxie.github.io/go/my_go_test1/&#34;&gt;Go项目的测试代码2（项目运用）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里简单的共享一下测试替身。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go项目的测试代码2（项目运用）</title>
      <link>https://limingxie.github.io/go/my_go_test1/</link>
      <pubDate>Sun, 27 May 2018 20:37:02 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/my_go_test1/</guid>
      <description>&lt;p&gt;上一篇文章介绍了最基本的测试代码的写法。
&lt;a href=&#34;https://limingxie.github.io/go/my_go_test/&#34;&gt;Go项目的测试代码（基础）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里简单的共享一下我在项目中使用的方式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go项目的测试代码1（基础）</title>
      <link>https://limingxie.github.io/go/my_go_test/</link>
      <pubDate>Sun, 27 May 2018 20:36:02 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/my_go_test/</guid>
      <description>&lt;p&gt;最近写了测试代码，整理了一下。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用docker运行mysql</title>
      <link>https://limingxie.github.io/database/mysql/docker_mysql/</link>
      <pubDate>Tue, 27 Mar 2018 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/database/mysql/docker_mysql/</guid>
      <description>&lt;p&gt;以前开发的时候都是用本地的sqlite开发，但是极少数情况下，sqlite支持的语法发布到服务器上链接mysql会报错。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用hugo搭建个人博客</title>
      <link>https://limingxie.github.io/limingxie/hugo_create/</link>
      <pubDate>Wed, 14 Mar 2018 10:14:08 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/hugo_create/</guid>
      <description>&lt;p&gt;这几天研究了用hugo搭建个人博客。&lt;/p&gt;
&lt;p&gt;简单的整理了一下。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
