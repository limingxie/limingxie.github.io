<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pointer on Website of li_mingxie</title>
    <link>https://limingxie.github.io/tags/pointer/</link>
    <description>Recent content in pointer on Website of li_mingxie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 27 Jul 2021 07:28:49 +0800</lastBuildDate><atom:link href="https://limingxie.github.io/tags/pointer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【go笔记】指针, uintptr, unsafe.Pointer</title>
      <link>https://limingxie.github.io/go/go_point/</link>
      <pubDate>Tue, 27 Jul 2021 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/go/go_point/</guid>
      <description>Go中的指针及与指针对指针的操作主要有以下三种：
一普通的指针类型，例如 var intptr *T，定义一个T类型指针变量。
二内置类型uintptr，本质是一个无符号的整型，它的长度是跟平台相关的，它的长度可以用来保存一个指针地址。
三是unsafe包提供的Pointer，表示可以指向任意类型的指针。
类型:普通指针类型，用于传递对象地址，不能进行指针运算。 unsafe.Pointer:通用指针类型，用于转换不同类型的指针，不能进行指针运算，不能读取内存存储的值（必须转换到某一类型的普通指针）。unsafe.Pointer 是桥梁，可以让任意类型的指针实现相互转换，也可以将任意类型的指针转换为 uintptr 进行指针运算。 uintptr:用于指针运算，GC 不把 uintptr 当指针，uintptr 无法持有对象。uintptr 类型的目标会被回收。比如要在某个指针地址上加上一个偏移量，做完加减法后，转换成Pointer，通过操作，取值，修改值，随意。</description>
    </item>
    
  </channel>
</rss>
