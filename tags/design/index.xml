<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>design on Website of li_mingxie</title>
    <link>https://limingxie.github.io/tags/design/</link>
    <description>Recent content in design on Website of li_mingxie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 23 Mar 2022 07:28:49 +0800</lastBuildDate><atom:link href="https://limingxie.github.io/tags/design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【设计模式】常见的设计模式简介</title>
      <link>https://limingxie.github.io/struct/design_pattern/</link>
      <pubDate>Wed, 23 Mar 2022 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/struct/design_pattern/</guid>
      <description>我们常见设计模式一共有23种模式。其中我们可以分3个比较大的类型。
创建型模式，结构型模式，行为型模式。
1、创建型模式：用来描述 “如何创建对象”，它的主要特点是 “将对象的创建和使用分离”。包括单例、原型、工厂方法、抽象工厂和建造者 5 种模式。
2、结构型模式：用来描述如何将类或对象按照某种布局组成更大的结构。包括代理、适配器、桥接、装饰、外观、享元和组合 7 种模式。</description>
    </item>
    
    <item>
      <title>设计原则那些事儿</title>
      <link>https://limingxie.github.io/limingxie/solid_1/</link>
      <pubDate>Thu, 06 Jun 2019 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/solid_1/</guid>
      <description>&lt;p&gt;代码架构的设计原则中最普遍的是solid原则。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>solid原则简单笔记</title>
      <link>https://limingxie.github.io/limingxie/solid/</link>
      <pubDate>Sat, 01 Sep 2018 07:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/limingxie/solid/</guid>
      <description>&lt;p&gt;这些天因为工作上的需求，一套代码部署到不同的环境里。&lt;br&gt;
虽然说是一样的业务，但是在不同的环境里难免会有一些少许不同的业务。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
