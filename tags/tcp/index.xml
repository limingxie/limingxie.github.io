<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TCP on Website of li_mingxie</title>
    <link>https://limingxie.github.io/tags/tcp/</link>
    <description>Recent content in TCP on Website of li_mingxie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Apr 2022 09:05:49 +0800</lastBuildDate><atom:link href="https://limingxie.github.io/tags/tcp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【网络协议笔记】第四层:传输层(Transport)TCP协议简介(3)</title>
      <link>https://limingxie.github.io/network/4_-transport_tcp_03/</link>
      <pubDate>Wed, 27 Apr 2022 09:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/4_-transport_tcp_03/</guid>
      <description>1.TCP（Transmission Control Protocol）：传输控制协议 这一篇我们看看TCP的【三次握手】和【四次挥手】。
在看握手之前，需要对序号和确认号要有个清晰的概念才行。
1.序号、确认号 图片备用地址
发送HTTP请求前先建立连接（三次握手）：
发送方发送数据时，并不是每次发送TCP段都需要发送确认信号的，上图中每段都发送确认信号只是为了让我们更好的理解发送流程。
序号是发送方为了让接收方知道当前发送的是哪一块数据。</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第四层:传输层(Transport)TCP协议简介(2)</title>
      <link>https://limingxie.github.io/network/4_-transport_tcp_02/</link>
      <pubDate>Tue, 26 Apr 2022 06:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/4_-transport_tcp_02/</guid>
      <description>如果接收方的缓存区满了，发送方还在疯狂发送数据，
接收方只能把收到的数据包丢掉，大量的丢包会极大浪费网络资源，所以要进行流量控制。
1.流量控制 流量控制：让发送方的发送速率不要太快，让接收方来得及接收处理。 原理：通过确认报文中窗口字段来控制发送方的发送速率；
发送方的发送窗口大小不能超过接收方给出的窗口大小；
当发送方收到接收窗口的大小为0时，发送方就会停止发送数据。
图片备用地址
有一种特殊情况，一开始，接收方给发送方发送了0窗口的报文段。
后面，接收方又有了一些存储空间，给发送方发送的非0窗口的报文段丢失了。此时发送方的发送窗口一直为0，双方陷入僵局。</description>
    </item>
    
    <item>
      <title>【网络协议笔记】第四层:传输层(Transport)TCP协议简介(1)</title>
      <link>https://limingxie.github.io/network/4_-transport_tcp_01/</link>
      <pubDate>Mon, 25 Apr 2022 21:05:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/network/4_-transport_tcp_01/</guid>
      <description>TCP有以下几个知识点。
1.可靠传输(失败重传，保证不丢包) 2.流量控制(点对点，端对端；是通过控制接收窗口大小来控制的) 3.拥塞控制(一起维护网络环境，1.慢开始，2.用舌避免，3.快速重传，4快速回复) 4.建立连接(三次握手,四次挥手) 1.TCP（Transmission Control Protocol）：传输控制协议 图片备用地址
图片备用地址</description>
    </item>
    
    <item>
      <title>TCP/IP协议，HTTP协议，HTTPS协议，SOAP协议简介</title>
      <link>https://limingxie.github.io/basic/communication_protocol/</link>
      <pubDate>Wed, 16 Jun 2021 18:28:49 +0800</pubDate>
      
      <guid>https://limingxie.github.io/basic/communication_protocol/</guid>
      <description>我们会听到很多网络通讯协议，如果了解的不到位的话会让你晕头转向的。
今天就按笔记的形式整理了一下我们常见的几种协议。
先看看通讯协议是什么？ 维基百科是这么解释的。
通信协议（Communications Protocol，传输协议） 在电信领域中指的是，在任何物理介质中允许两个或多个在传输系统中的终端之间传播信息的系统标准，也是指计算机通信或网络设备的共同语言。
通信协议定义了通信中的语法学、语义学和同步规则以及可能存在的错误检测与纠正。通信协议在硬件、软件或两者之间皆可实现。
很绕口&amp;hellip;^^;; 如果不是技术相关人员的话，可以这么去理解。</description>
    </item>
    
  </channel>
</rss>
